/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/escape-html/index.js":
/*!*******************************************!*\
  !*** ./node_modules/escape-html/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */



/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Module exports.
 * @public
 */

module.exports = escapeHtml;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34: // "
        escape = '&quot;';
        break;
      case 38: // &
        escape = '&amp;';
        break;
      case 39: // '
        escape = '&#39;';
        break;
      case 60: // <
        escape = '&lt;';
        break;
      case 62: // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index
    ? html + str.substring(lastIndex, index)
    : html;
}


/***/ }),

/***/ "./node_modules/html5-tag/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/html5-tag/lib/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _escapeHtml = __webpack_require__(/*! escape-html */ "./node_modules/escape-html/index.js");

var _escapeHtml2 = _interopRequireDefault(_escapeHtml);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// https://www.w3.org/TR/html5/syntax.html#void-elements
// Void elements only have a start tag; end tags must not be specified for void elements.
var voidElements = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];

// @param {string} [tag] The tag name. Defaults to 'div'.
// @param {object} attrs HTML attributes.
// @param {string} [text] The content string.
module.exports = function (tag, attrs, text) {
    if ((typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
        text = attrs;
        attrs = tag;
        tag = 'div';
    }

    var voidElement = voidElements.indexOf(('' + tag).toLowerCase()) >= 0;
    var html = '<' + tag;

    attrs = _extends({}, attrs);
    Object.keys(attrs).forEach(function (name) {
        var value = attrs[name];
        if (typeof value === 'string') {
            value = (0, _escapeHtml2.default)('' + value);
            html += ' ' + name + '="' + value + '"';
        } else if (!!value) {
            html += ' ' + name;
        }
    });

    if (voidElement) {
        html += '>';
    } else if (text !== undefined) {
        html += '>' + text + '</' + tag + '>';
    } else {
        html += '/>';
    }

    return html;
};

/***/ }),

/***/ "./src/infinite-table.js":
/*!*******************************!*\
  !*** ./src/infinite-table.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class InfiniteTable {

  el = null;

  scrollElement = null;

  contentElement = null;

  rows = [];

  cache = {};

  options = {
    rowsInBlock: 10,
    blocksInCluster: 4,
    rowRender: null,
    data: []
  };

  state = {
    lastClusterIndex: -1,
    itemHeight: 0,
    blockHeight: 0,
    clusterHeight: 0
  };

  constructor(el, options) {
    this.el = el;

    console.log(options)
    this.options = {
      ...this.options,
      ...options
    }

    this.create()
    this.loadData(this.options.data)
  }

  create () {
    if (this.el) {
      this.scrollElement = document.createElement('div');
      const contentElement = document.createElement('div');
      this.scrollElement.appendChild(contentElement);
      this.contentElement = contentElement;

      this.scrollElement.className = 'elem-scroll'
      this.contentElement.className = 'elem-content'
      this.el.appendChild(this.scrollElement)

      const scrollTop = this.scrollElement.scrollTop;
      this.changeDOM();
      // Restore scroll position
      this.scrollElement.scrollTop = scrollTop;

      // 滚动的监听事件
      this.scrollElement.addEventListener('scroll', () => {
        const clusterIndex = this.getCurrentClusterIndex();
        console.log('clusterIndex', clusterIndex)
        
        if (this.state.lastClusterIndex !== clusterIndex) {
            this.changeDOM();
        }
        this.state.lastClusterIndex = clusterIndex;
  })
    }
  }

  update () {
    const scrollTop = this.scrollElement.scrollTop
    if (this.state.itemHeight * this.rows.length < scrollTop) {
      this.scrollElement.scrollTop = 0;
      this.state.lastClusterIndex = 0;
    }

    this.changeDOM()
    this.scrollElement.scrollTop = scrollTop;
  }

  loadData (rows) {
    this.rows = rows
    if (!this.rows || this.rows.length === 0) {
      return 
    }
    this.rows = rows.map(r => this.options.rowRender(r))
    this.changeDOM()
  }

  changeDOM () {
    if (!this.state.clusterHeight && this.rows.length > 0) {

      if (this.contentElement.children.length <= 1) {
        this.cache.content = this.setContent(this.rows[0] + this.rows[0] + this.rows[0]);
      }

      this.state = { ...this.state, ...this.computeHeight() };
    }

    let topOffset = 0;
    let bottomOffset = 0;
    let rows = [];

    if (this.rows.length < this.options.rowsInBlock) {
      rows = (this.rows.length > 0) ? this.rows : this.generateEmptyRow();
    } else {
      const rowsInCluster = this.options.rowsInBlock * this.options.blocksInCluster;
      console.log('rowsInCluster', rowsInCluster)
      const clusterIndex = this.getCurrentClusterIndex();
      // 渲染的开始索引
      const visibleStart = Math.max((rowsInCluster - this.options.rowsInBlock) * clusterIndex, 0);
      // 渲染的结束索引
      const visibleEnd = visibleStart + rowsInCluster;

      topOffset = Math.max(visibleStart * this.state.itemHeight, 0);
      bottomOffset = Math.max((this.rows.length - visibleEnd) * this.state.itemHeight, 0);

      // Returns a shallow copy of the rows selected from `visibleStart` to `visibleEnd` (`visibleEnd` not included).
      rows = this.rows.slice(visibleStart, visibleEnd);
    }

    let layout = [];

    if (topOffset > 0) {
      if (this.options.keepParity) {
        layout.push(this.renderExtraTag('keep-parity'));
      }
      layout.push(this.renderExtraTag('top-space', topOffset));
    }
    layout.push(...rows);
    if (bottomOffset > 0) {
        layout.push(this.renderExtraTag('bottom-space', bottomOffset));
    }
    this.setContent(layout.join(''))
  }

  computeHeight () {
    if (!this.rows.length) {
      return {
          clusterHeight: 0,
          blockHeight: this.state.blockHeight,
          itemHeight: this.state.itemHeight
      };
    } else {
        const nodes = this.contentElement.children;
        const node = nodes[Math.floor(nodes.length / 2)];

        // 树节点的高度
        let itemHeight = node.offsetHeight;

        // 21 * 50 = 1050
        const blockHeight = itemHeight * this.options.rowsInBlock;
        // 1050 * 4 = 4200
        const clusterHeight = blockHeight * this.options.blocksInCluster;

        return {
            itemHeight,
            blockHeight,
            clusterHeight
        };
    }
  }

  setContent(content) {
    this.contentElement.innerHTML = content;
  }

  generateEmptyRow() {
    const emptyRow = document.createElement('div');
    emptyRow.className = 'emptyClass';
    emptyRow.appendChild(document.createTextNode('No Data'));
    return [emptyRow.outerHTML];
  }

  getCurrentClusterIndex() {
    const { blockHeight, clusterHeight } = this.state;
    if (!blockHeight || !clusterHeight) {
        return 0;
    }
    return Math.floor(this.scrollElement.scrollTop / (clusterHeight - blockHeight)) || 0;
  }

  renderExtraTag(className, height) {
      const tag = document.createElement('div');
      const prefix = 'infinite-tree-';

      tag.className = [
          prefix + 'extra-row',
          prefix + className
      ].join(' ');

      if (height) {
          tag.style.height = height + 'px';
      }

      return tag.outerHTML;
  }

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InfiniteTable);

/***/ }),

/***/ "./src/renderer.js":
/*!*************************!*\
  !*** ./src/renderer.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var html5_tag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! html5-tag */ "./node_modules/html5-tag/lib/index.js");
/* harmony import */ var html5_tag__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(html5_tag__WEBPACK_IMPORTED_MODULE_0__);


function myRenderer (node) {
  return html5_tag__WEBPACK_IMPORTED_MODULE_0___default()('div', {
    'data-id': node.id,
    'class': 'elem-item'
}, node.id);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (myRenderer);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
const InfiniteTable = (__webpack_require__(/*! ./infinite-table */ "./src/infinite-table.js")["default"])
const defaultRowRenderer = (__webpack_require__(/*! ./renderer */ "./src/renderer.js")["default"])

const listData = [
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
  {id: 1, name: '1'},
  {id: 2, name: '1'},
  {id: 3, name: '1'},
  {id: 4, name: '1'},
  {id: 5, name: '1'},
  {id: 6, name: '1'},
  {id: 7, name: '1'},
  {id: 8, name: '1'},
  {id: 9, name: '1'},
  {id: 10, name: '1'},
  {id: 11, name: '1'},
  {id: 12, name: '1'},
  {id: 13, name: '1'},
  {id: 14, name: '1'},
  {id: 15, name: '1'},
  {id: 16, name: '1'},
  {id: 17, name: '1'},
  {id: 18, name: '1'},
  {id: 19, name: '1'},
  {id: 20, name: '1'},
  {id: 21, name: '1'},
  {id: 22, name: '1'},
  {id: 23, name: '1'},
  {id: 24, name: '1'},
  {id: 25, name: '1'},
  {id: 26, name: '1'},
  {id: 27, name: '1'},
  {id: 28, name: '1'},
  {id: 29, name: '1'},
  {id: 30, name: '1'},
  {id: 31, name: '1'},
  {id: 32, name: '1'},
  {id: 33, name: '1'},
  {id: 34, name: '1'},
  {id: 35, name: '1'},
  {id: 36, name: '1'},
  {id: 37, name: '1'},
  {id: 38, name: '1'},
  {id: 39, name: '1'},
  {id: 40, name: '1'},
  {id: 41, name: '1'},
  {id: 42, name: '1'},
  {id: 43, name: '1'},
  {id: 44, name: '1'},
  {id: 45, name: '1'},
  {id: 46, name: '1'},
  {id: 47, name: '1'},
  {id: 48, name: '1'},
  {id: 49, name: '1'},
  {id: 50, name: '1'},
  {id: 51, name: '1'},
  {id: 52, name: '1'},
  {id: 53, name: '1'},
  {id: 54, name: '1'},
  {id: 55, name: '1'},
  {id: 56, name: '1'},
  {id: 57, name: '1'},
  {id: 58, name: '1'},
  {id: 59, name: '1'},
  {id: 60, name: '1'},
  {id: 61, name: '1'},
  {id: 62, name: '1'},
  {id: 63, name: '1'},
  {id: 64, name: '1'},
  {id: 65, name: '1'},
  {id: 66, name: '1'},
  {id: 67, name: '1'},
  {id: 68, name: '1'},
  {id: 69, name: '1'},
  {id: 70, name: '1'},
  {id: 71, name: '1'},
  {id: 72, name: '1'},
  {id: 73, name: '1'},
  {id: 74, name: '1'},
  {id: 75, name: '1'},
  {id: 76, name: '1'},
  {id: 77, name: '1'},
  {id: 78, name: '1'},
  {id: 79, name: '1'},
  {id: 80, name: '1'},
  {id: 81, name: '1'},
  {id: 82, name: '1'},
  {id: 83, name: '1'},
  {id: 84, name: '1'},
  {id: 85, name: '1'},
  {id: 86, name: '1'},
  {id: 87, name: '1'},
  {id: 88, name: '1'},
  {id: 89, name: '1'},
  {id: 90, name: '1'},
  {id: 91, name: '1'},
  {id: 92, name: '1'},
  {id: 93, name: '1'},
  {id: 94, name: '1'},
  {id: 95, name: '1'},
  {id: 96, name: '1'},
  {id: 97, name: '1'},
  {id: 98, name: '1'},
  {id: 99, name: '1'},
  {id: 100, name: '1'},
  {id: 101, name: '1'},
  {id: 102, name: '1'},
  {id: 103, name: '1'},
  {id: 104, name: '1'},
  {id: 105, name: '1'},
  {id: 106, name: '1'},
  {id: 107, name: '1'},
  {id: 108, name: '1'},
  {id: 109, name: '1'},
  {id: 110, name: '1'},
  {id: 111, name: '1'},
  {id: 112, name: '1'},
  {id: 113, name: '1'},
  {id: 114, name: '1'},
  {id: 115, name: '1'},
  {id: 116, name: '1'},
  {id: 117, name: '1'},
  {id: 118, name: '1'},
  {id: 119, name: '1'},
  {id: 120, name: '1'},
  {id: 121, name: '1'},
  {id: 122, name: '1'},
  {id: 123, name: '1'},
  {id: 124, name: '1'},
  {id: 125, name: '1'},
  {id: 126, name: '1'},
  {id: 127, name: '1'},
  {id: 128, name: '1'},
  {id: 129, name: '1'},
  {id: 130, name: '1'},
  {id: 131, name: '1'},
  {id: 132, name: '1'},
  {id: 133, name: '1'},
  {id: 134, name: '1'},
  {id: 135, name: '1'},
  {id: 136, name: '1'},
  {id: 137, name: '1'},
  {id: 138, name: '1'},
  {id: 139, name: '1'},
  {id: 140, name: '1'},
  {id: 141, name: '1'},
  {id: 142, name: '1'},
  {id: 143, name: '1'},
  {id: 144, name: '1'},
  {id: 145, name: '1'},
  {id: 146, name: '1'},
  {id: 147, name: '1'},
  {id: 148, name: '1'},
  {id: 149, name: '1'},
  {id: 150, name: '1'},
  {id: 151, name: '1'},
  {id: 152, name: '1'},
  {id: 153, name: '1'},
  {id: 154, name: '1'},
  {id: 155, name: '1'},
  {id: 156, name: '1'},
  {id: 157, name: '1'},
  {id: 158, name: '1'},
  {id: 159, name: '1'},
  {id: 160, name: '1'},
]

function initTable () {
  const tree = document.createElement('div')
  tree.style.height = '100px'
  tree.style.background="green"

  new InfiniteTable(tree, {
    data: listData,
    rowRender: defaultRowRenderer
  })

  window.document.body.appendChild(tree)
}

initTable()
})();

/******/ })()
;
//# sourceMappingURL=infinite-table.min.js.map